package com.adtec.ncps.busi.qrps.qr;

import com.adtec.ncps.DtaTool;
import com.adtec.ncps.busi.ncp.BusiPub;
import com.adtec.ncps.busi.ncp.SysPub;
import com.adtec.ncps.busi.qrps.QrBusiPub;
import com.adtec.ncps.busi.qrps.bean.QrBook;
import com.adtec.ncps.busi.qrps.dao.QrBookDao;
import com.adtec.starring.datapool.EPOper;
import com.adtec.starring.struct.dta.DtaInfo;
import com.union.sdk.SDKConstants;

/**
 * @ClassName: ZS0120000903
 * @Description: 查询订单信息
 * @author Q
 * @date 2018年1月3日下午3:07:58
 *
 */
public class ZS0120000903 {

    public static int deal() throws Exception {
	SysPub.appLog("INFO", "开始ZS0120000903业务处理");

	int qryRet = -1;

	// 组织报文发送到银联
	qryRet = sendUP();

	// 根据银联返回结果处理数据
	// 解析数据到数据对象PAYEEINFO
//	QrBusiPub.parsDataToEle();

	// 查询营销信息
	// qryCouponInfo();

	// 组织数据登记到book表
	// 只有查询成功的才登记表
	if (0 == qryRet) {
	    int ret = insQrBook();
	    if (ret != 1) {
		SysPub.appLog("ERROR", "插入数据库表失败");
	    } else {
		SysPub.appLog("INFO", "插入数据库成功");
	    }
	}

	return 0;
    }

    public static int insQrBook() throws Exception {
	SysPub.appLog("INFO", "开始ZS0120000903登记簿数据");
	int iResult = 0;
	DtaInfo dtaInfo = DtaInfo.getInstance();
	String tpID = dtaInfo.getTpId();

	QrBook qrBook = new QrBook();

	try {
	    // 先产生流水号
	    BusiPub.getPlatSeq();
	    int iseq_no = (Integer) EPOper.get(tpID, "INIT[0].SeqNo");
	    String platDate = (String) EPOper.get(tpID, "T_PLAT_PARA[0].PLAT_DATE");
	    // 非对象类型赋值
	    QrBusiPub.qrBookData(tpID, qrBook, platDate, iseq_no);

	    // 补登记二维码
	    qrBook.setQr_code((String) EPOper.get(tpID, "INIT[0].__ERR_MSG"));
	    // 收款方信息
	    qrBook.setPayee_info_acc_no((String) EPOper.get(tpID, "PAYEEINFO[0].accNo"));
	    qrBook.setPayee_info_id((String) EPOper.get(tpID, "PAYEEINFO[0].id"));
	    qrBook.setPayee_info_mercat_code((String) EPOper.get(tpID, "PAYEEINFO[0].merCatCode"));
	    qrBook.setPayee_info_name((String) EPOper.get(tpID, "PAYEEINFO[0].name"));
	    qrBook.setPayee_info_sub_id((String) EPOper.get(tpID, "PAYEEINFO[0].subId"));
	    qrBook.setPayee_info_sub_name((String) EPOper.get(tpID, "PAYEEINFO[0].subName"));
	    qrBook.setPayee_info_term_id((String) EPOper.get(tpID, "PAYEEINFO[0].termId"));

	    qrBook.setStat("000");// 初始状态

	    iResult = QrBookDao.insert(qrBook);
	    if (iResult <= 0) {
		SysPub.appLog("ERROR", "插入t_qrp_book表失败");
	    }
	} catch (Exception e) {
	    SysPub.appLog("ERROR", "插入t_qrp_book表失败");
	    e.printStackTrace();
	    throw e;
	}

	SysPub.appLog("INFO", "插入数据，返回:%d", iResult);
	return iResult;
    }

    /**
     * @Description: 调用银联接口 发送银联
     * @author Q
     * @return
     * @throws Exception
     * @date 2017年12月17日下午5:04:44
     */
    public static int sendUP() throws Exception {
	SysPub.appLog("INFO", "发往银联开始");
	DtaInfo dtaInfo = DtaInfo.getInstance();
	String tpID = dtaInfo.getTpId();
	try {
	    /* 报文头赋值 */
	    EPOper.put(tpID, "OBJ_QRUP_ALL[0].version", SDKConstants.VERSION_1_0_0);
	    EPOper.put(tpID, "OBJ_QRUP_ALL[0].signature", "0");
	    // EPOper.put(tpID, "OBJ_QRUP_ALL[0].certId", certId);
	    EPOper.put(tpID, "OBJ_QRUP_ALL[0].reqType", "0120000903");
	    // EPOper.put(tpID, "OBJ_QRUP_ALL[0].issCode", issCode);
	    // EPOper.put(tpID, "OBJ_QRUP_ALL[0].qrType", qrType);

	    // 将二维码的值保存下来后面登记表用
	    EPOper.copy(tpID, tpID, "OBJ_QRUP_ALL[0].qrCode", "INIT[0].__ERR_MSG");
	    // 调度银联0120000903服务
	    SysPub.appLog("INFO", "调用银联0120000903服务开始");
	    DtaTool.call("QRUP_CLI", "ZS0120000903");

	} catch (Exception e) {
	    SysPub.appLog("ERROR", "调用银联服务0120000903失败：%s", e.getMessage());
	    throw e;
	}

	return 0;
    }

}
